<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <context:annotation-config/>
    <!--扫描注解包-->
    <context:component-scan base-package="com.QianQian" />

    <!--配置文件加载 init.properties-->
    <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc.properties" />
    </bean>
    <!-- 使用Tomcat JDBC连接(池) -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="packagesToScan">
            <list>
                <value>model所在的package</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/数据库</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop><!-- 使用getCurrentSession()方法，必须配置此属性 -->
            </props>
        </property>
    </bean>

    <!-- 配置hibernateTemplate
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
       <property name="sessionFactory" ref="sessionFactory"/>
       <property name="checkWriteOperations" value="false"></property>
    </bean>-->

    <!-- 事务管理器
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>-->
    <!-- 使用annotation定义事务
    <tx:annotation-driven transaction-manager="transactionManager" />-->

    <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="delete*" propagation="REQUIRED" read-only="true"/>
              <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>-->
    <!--<aop:config>
         只对业务逻辑层实施事务
        <aop:pointcut expression="execution(* com.whut.work.*.service..*.*(..))" id="businessService"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="businessService"/>
    </aop:config>-->
</beans>