<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd" >
    <context:annotation-config/>
    <task:annotation-driven></task:annotation-driven>
    <!--扫描注解包-->
    <context:component-scan base-package="com.financing" />




    <!--********************************************配置hibernate********************************************-->

    <!--扫描配置文件(这里指向的是之前配置的那个jdbc.properties)-->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- 使用c3p0连接(池) -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxPoolSize" value="40" />      <!--最大连接数-->
        <property name="minPoolSize" value="1" />       <!--最小连接数-->
        <property name="initialPoolSize" value="10" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="20" />  <!--最大空闲时间-->
    </bean>

    <!-- 配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="packagesToScan" value="com.financing.entity"/>
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> <!--hibernate根据实体自动生成数据库表-->
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/financing</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop><!-- 使用getCurrentSession()方法，必须配置此属性 -->
            </props>
        </property>
    </bean>

    <!--&lt;!&ndash; 配置hibernateTemplate&ndash;&gt;-->
    <!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">-->
       <!--<property name="sessionFactory" ref="sessionFactory"/>-->
       <!--<property name="checkWriteOperations" value="false"></property>-->
    <!--</bean>-->

    <!-- 事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 使用annotation定义事务-->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--&lt;!&ndash;  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager&ndash;&gt;-->
    <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="get*" propagation="REQUIRED" read-only="true"/>-->
            <!--<tx:method name="delete*" propagation="REQUIRED" read-only="true"/>-->
              <!--<tx:method name="*" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
         <!--&lt;!&ndash;只对业务逻辑层实施事务&ndash;&gt;-->
        <!--<aop:pointcut expression="execution(* com.financing.service.*(..))" id="businessService"/>-->
        <!--<aop:advisor advice-ref="transactionAdvice" pointcut-ref="businessService"/>-->
    <!--</aop:config>-->
</beans>